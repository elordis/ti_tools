// Code generated by "stringer -type=PowerPlantClass"; DO NOT EDIT.

package ti

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PPCAnyGeneral-0]
	_ = x[PPCFuelCell-1]
	_ = x[PPCSolidCoreFission-2]
	_ = x[PPCLiquidCoreFission-3]
	_ = x[PPCGasCoreFission-4]
	_ = x[PPCSaltWaterCore-5]
	_ = x[PPCZPinchFusion-6]
	_ = x[PPCAnyMagneticConfinementFusion-7]
	_ = x[PPCElectrostaticConfinementFusion-8]
	_ = x[PPCHybridConfinementFusion-9]
	_ = x[PPCToroidMagneticConfinementFusion-10]
	_ = x[PPCMirroredMagneticConfinementFusion-11]
	_ = x[PPCInertialConfinementFusion-12]
	_ = x[PPCAntimatterSolidCore-13]
	_ = x[PPCAntimatterGasCore-14]
	_ = x[PPCAntimatterPlasmaCore-15]
	_ = x[PPCAntimatterBeamCore-16]
}

const _PowerPlantClass_name = "PPCAnyGeneralPPCFuelCellPPCSolidCoreFissionPPCLiquidCoreFissionPPCGasCoreFissionPPCSaltWaterCorePPCZPinchFusionPPCAnyMagneticConfinementFusionPPCElectrostaticConfinementFusionPPCHybridConfinementFusionPPCToroidMagneticConfinementFusionPPCMirroredMagneticConfinementFusionPPCInertialConfinementFusionPPCAntimatterSolidCorePPCAntimatterGasCorePPCAntimatterPlasmaCorePPCAntimatterBeamCore"

var _PowerPlantClass_index = [...]uint16{0, 13, 24, 43, 63, 80, 96, 111, 142, 175, 201, 235, 271, 299, 321, 341, 364, 385}

func (i PowerPlantClass) String() string {
	if i < 0 || i >= PowerPlantClass(len(_PowerPlantClass_index)-1) {
		return "PowerPlantClass(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PowerPlantClass_name[_PowerPlantClass_index[i]:_PowerPlantClass_index[i+1]]
}
